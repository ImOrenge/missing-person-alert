import React, { useState, useEffect } from 'react';
import { Bell, BellOff, ChevronLeft, ChevronRight, LogIn, LogOut, UserCircle, Plus, FileText } from 'lucide-react';
import EmergencyMap from './components/EmergencyMap';
import Sidebar from './components/Sidebar';
import FilterPanel from './components/FilterPanel';
import ReportModal from './components/ReportModal';
import MyReportsModal from './components/MyReportsModal';
import LoginModal from './components/LoginModal';
import AnnouncementBanner from './components/AnnouncementBanner';
import { useEmergencyStore } from './stores/emergencyStore';
import { useApiData } from './hooks/useApiData';
import { ToastContainer, toast } from 'react-toastify';
import { onAuthChange, logout as firebaseLogout } from './services/firebase';
import type { User } from 'firebase/auth';
import 'react-toastify/dist/ReactToastify.css';

const ANNOUNCEMENTS = [
  { id: 1, text: '실종자를 발견하시면 즉시 112 또는 182(실종아동찾기센터)로 신고해주세요', type: 'info' as const },
  { id: 2, text: '허위 신고 시 법적 책임을 질 수 있습니다', type: 'warning' as const },
  { id: 3, text: '실시간 알림을 켜두시면 새로운 실종자 정보를 즉시 받아보실 수 있습니다', type: 'info' as const },
  { id: 4, text: '실종자 정보는 경찰청 공공데이터를 기반으로 제공됩니다', type: 'info' as const },
  { id: 5, text: '실종 골든타임은 48시간입니다. 신속한 제보가 생명을 살립니다', type: 'warning' as const }
];

function App() {
  const [showSidebar, setShowSidebar] = useState(true);
  const [showFilters, setShowFilters] = useState(false);
  const [showReportModal, setShowReportModal] = useState(false);
  const [showMyReportsModal, setShowMyReportsModal] = useState(false);
  const [showLoginModal, setShowLoginModal] = useState(false);
  const [currentUser, setCurrentUser] = useState<User | null>(null);
  const [notifications, setNotifications] = useState(true);
  const [currentAnnouncementIndex, setCurrentAnnouncementIndex] = useState(0);

  const { isConnected } = useApiData();
  const missingPersons = useEmergencyStore(state => state.missingPersons);

  // Firebase 인증 상태 감지
  useEffect(() => {
    const unsubscribe = onAuthChange((user) => {
      setCurrentUser(user);
      if (user) {
        toast.success(`환영합니다, ${user.displayName || user.email}님!`);
      }
    });

    return () => unsubscribe();
  }, []);

  // 공지사항 자동 슬라이드
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentAnnouncementIndex((prev) => (prev + 1) % ANNOUNCEMENTS.length);
    }, 5000);
    return () => clearInterval(interval);
  }, []);
